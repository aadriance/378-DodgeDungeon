<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_me_d</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>myDir = 0;
lastDir = myDir;
mySword = instance_create(x,y,obj_sword);
mySword.visible = false;
moveRate = 6;
dashLevel = 100;
isDashing = false;
dashModifier = 2.5;
dashRate = 16;

swordCool = 0;
invul = 0;
transparent = 0;

lastRoom = room;
randomize();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>711</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_life</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>15</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>211</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sound</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>6</kind>
            <sound>-100</sound>
          </argument>
          <argument>
            <kind>3</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var dy = 0;
var dx = 0;
baseimgspd = 0.5;
image_speed = 0;

if keyboard_check(vk_left) &amp;&amp; !keyboard_check(ord('Z'))
   {
   dx = -moveRate;
   image_speed = baseimgspd;
   if !audio_is_playing(snd_walk) then audio_play_sound(snd_walk, 0, 0);
   if sprite_index != spr_me_l then sprite_index = spr_me_l;
   } 
if keyboard_check(vk_right) &amp;&amp; !keyboard_check(ord('Z'))
   {
   dx = moveRate;
   image_speed = baseimgspd;
   if !audio_is_playing(snd_walk) then audio_play_sound(snd_walk, 0, 0);
   if sprite_index != spr_me_r then sprite_index = spr_me_r;
   }
if keyboard_check(vk_up) &amp;&amp; !keyboard_check(ord('Z'))
   {
   dy = -moveRate;
   image_speed = baseimgspd;
   if !audio_is_playing(snd_walk) then audio_play_sound(snd_walk, 0, 0);
   if sprite_index != spr_me_u then sprite_index = spr_me_u;
   }
if keyboard_check(vk_down) &amp;&amp; !keyboard_check(ord('Z'))
   {
   dy = moveRate;
   image_speed = baseimgspd;
   if !audio_is_playing(snd_walk) then audio_play_sound(snd_walk, 0, 0);
   if sprite_index != spr_me_d then sprite_index = spr_me_d;
   }

if keyboard_check(vk_shift) &amp;&amp; dashLevel &gt; 1 &amp;&amp; (dashLevel &gt;= 95 || isDashing) &amp;&amp; image_speed &gt; 0 {
   isDashing = true;
   invul = 3;
}
else {
   isDashing = false;
}
   
if (isDashing) {
   dx *= dashModifier;
   dy *= dashModifier;
   dashLevel -= dashRate;
}   
else {
   if dashLevel &lt; 100 {
      dashLevel += dashRate/8;
   }
}
   
if(place_free(x+dx, y)){
   x += dx;
}
else {
   while(abs(dx) &gt; 0) {
      if (dx &gt; 0) {
         dx -= 1;
      }
      else {
         dx += 1;
      }
      if(place_free(x+dx, y)){
         x += dx;
         break;
      }
   }
}

if(place_free(x, y+dy)){
   y += dy;
}
else {
   while(abs(dy) &gt; 0) {
      if (dy &gt; 0) {
         dy -= 1;
      }
      else {
         dy += 1;
      }
      if(place_free(x, y+dy)){
         y += dy;
         break;
      }
   }
}
   
if (abs(dx) + abs(dy) != 0) {
   myDir = point_direction(x,y,x+dx,y+dy);
}

if (invul &gt; 0) {
   invul -= 1;
}
if(transparent &gt; 0){
    image_alpha = 0.4;
    transparent -= 1;
}else{
    image_alpha = 1;
}
   
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(swordCool&gt;0){
    swordCool -= 1;
}
if ((keyboard_check_pressed(ord('Z')) || keyboard_check_pressed(vk_space)) &amp;&amp; swordCool == 0) {
    sw = instance_create(x, y, obj_sword);
    sw.image_angle = myDir;
    swordCool = 8;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_basiclaser">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(other.active == true &amp;&amp; invul &lt; 1){
    audio_play_sound(snd_player_hit, 1, false);
    lives -=1;
    invul = 18;
    transparent = 18;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_basicbullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(invul &lt; 1){
    audio_play_sound(snd_player_hit, 1, false);
    lives -=1;
    invul = 18;
    transparent = 18;
    with(other){
      instance_destroy();
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_wall">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>COLLISION</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="6">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>obj_basicbullet</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_goto(rm_gameOver);
instance_destroy();


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>lastRoom = room;
isDashing = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>524</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_color</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>13</kind>
            <string>16777215</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(dashLevel &lt; 100){
   draw_healthbar_circular(x, y, sprite_width, 0, dashLevel, spr_staminabar);
}
draw_set_halign(fa_center)
draw_sprite(spr_small_health,0,25 - 15,25 - 10)
draw_text(25,25, lives)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
