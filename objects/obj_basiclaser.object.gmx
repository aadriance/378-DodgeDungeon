<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_bullet_red</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>direction = 0;
delay = 60;
ttl = 70;               //time to live, including during inactivity
angVelocity = 0;        //angle turning speed
startWidth = 0.2;       //width when thin and inactive
endWidth = 2;
widthGrowRate = 5;      //time for width to reach max
widthShrinkRate = 3;    //time for width to die out
radialDist = 0;         //distance from core

image_yscale = startWidth;
widthGrowth = (endWidth - startWidth)/widthGrowRate;
widthShrink = (endWidth - startWidth)/widthShrinkRate;

active = false;

corex = x;
corey = y;

endx = x;
endy = y;
dist = 0;

init = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(init){
    image_angle = direction;

    x = x+lengthdir_x(radialDist, direction);
    y = y+lengthdir_y(radialDist, direction);
    
    //
    
    for(i = 0; i &lt; 1600; i+=1){
        if(place_free(endx, endy)){
            endx = x + lengthdir_x(i, image_angle);
            endy = y + lengthdir_y(i, image_angle);
        }
    }
    
    dist = distance_to_point(endx, endy);
    
    image_xscale = dist/sprite_width;
    
    x+= lengthdir_x(dist/2, image_angle);
    y+= lengthdir_y(dist/2, image_angle);
    
    init = false;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(delay &gt; 0){
    delay -= 1;
}else{
    if(image_yscale &lt; endWidth){
        image_yscale += widthGrowth;
    }else{
        active = true;
    }
}

if(ttl &gt; 0){
    ttl -= 1;
}else{
    active = false;
    if(image_yscale &gt; 0){
        image_yscale -= widthShrink;
        if(image_yscale &lt; 0){
            image_yscale = 0;
        }
    }else{
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
